// BaÄŸlantÄ± KontrolÃ¼
// console.log("Merhaba Js");

/*
  *Date Objesi
  - Javascript objeleri iÃ§erisinde yer alana 'Date' objesi ile tarih bilgisine eriÅŸebiliriz.
  - Bu obje iÃ§erisinde yer alan metotlar sayesinde gerek tam tarihi gerekse Ã¶zelleÅŸtirilmiÅŸ tarih dilimlerini almaya yarar.
*/
// Genel Tarih Alma
let tarih = new Date();
// Genel Tarih Ä°Ã§erisinden GÃ¼nÃ¼ Alma
let gÃ¼n = new Date().getDate();
// Genel Tarih Ä°Ã§erinden AyÄ± Alma
let ay = new Date().getMonth();
// Genel Tarih Ä°Ã§erisinden YÄ±lÄ± Alma
let yÄ±l = new Date().getFullYear();
// Genel Tarih Ä°Ã§erisinden Saati Alma
let saat = new Date().getHours();
// Genel  Tarih Ä°Ã§erisinden Dakikaya EriÅŸme
let dakika = new Date().getMinutes();
// Genel  Tarih Ä°Ã§erisinden Milisaniyeye  EriÅŸme
let ms = new Date().getMilliseconds();
document.write("Tarih: ", tarih + "<br/>");
document.write("GÃ¼n: ", gÃ¼n + "<br/>");
document.write("Ay: ", ay + 1 + "<br/>");
document.write("YÄ±l: ", yÄ±l + "<br/>");
document.write("Dakika: ", dakika + "<br/>");
document.write("Saat: ", saat + "<br/>");
document.write("Saniye: ", ms + "<br/>");

/*
* YukarÄ±da gÃ¶rÃ¼ldÃ¼ÄŸÃ¼ Ã¼zre Date objesi ve iÃ§erisinde yer alan metotlar sayesinde dinamik bir ÅŸekilde tarih bilgisine eriÅŸebiliriz.

*/

// Switch-Case

let dayNumber = 3;

switch (dayNumber) {
  case 1:
    document.write("Pazartesi" + "<br/>");
    break;
  case 2:
    document.write("SalÄ±" + "<br/>");
    break;
  case 3:
    document.write("Ã‡arÅŸamba" + "<br/>");
    break;
  case 4:
    document.write("PerÅŸembe" + "<br/>");
    break;
  case 5:
    document.write("Cuma" + "<br/>");
    break;
  case 6:
    document.write("Cumartesi" + "<br/>");
    break;
  case 7:
    document.write("Pazar" + "<br/>");
    break;
  default:
    document.write("TanÄ±msÄ±z GÃ¼n" + "<br/>");
}

let courses = ["frontend", "backend", "react native", "ingilizce"];

switch (courses[4]) {
  case "frontend":
    document.write("Frontend Kursuna HoÅŸgeldiniz" + "<br/>");
    break;
  case "backend":
    document.write("Backend Kursuna HoÅŸgeldiniz" + "<br/>");
    break;
  case "react native":
    document.write("React Native Kursuna HoÅŸgeldiniz" + "<br/>");
    break;
  case "ingilizce":
    document.write("Ä°ngilizce HoÅŸgeldiniz" + "<br/>");
    break;
  default:
    document.write("TanÄ±msÄ±z Kurs" + "<br/>");
}
/*
-- For DÃ¶ngÃ¼sÃ¼:

- For dÃ¶ngÃ¼sÃ¼ tekrar gerektiren durumlarda iÅŸlemleri kolayca yapmamÄ±za olanak tanÄ±yan bir yapÄ±dadÄ±r.SayaÃ§ mantÄ±ÄŸÄ± iÃ§eren bu yapÄ±da bir ÅŸartÄ± saÄŸlamasÄ± durumunda Ã§alÄ±ÅŸmasÄ± gereken yapÄ± Ã§alÄ±ÅŸtÄ±rÄ±lÄ±r.


*/
for (i = 0; i < 5; i++) {
  document.write("Udemig Akademiden Selamlar ğŸ””" + "<br/>");
}

let cars = [
  "BMW",
  "MERCEDES",
  "AUDÄ°",
  "PORSCHE",
  "TESLA",
  "FORD",
  "TOYOTA",
  "DODGE",
  "Lamborghini Gallardo LP550-2 ",
  "Valentino Balboni",
];
// document.write("Araba Dizisi" + "<br/>");

for (a = 0; a < cars.length; a++) {
  document.write(cars[a] + "<br/>");
}

/*
for dÃ¶ngÃ¼sÃ¼ bizden 3 parametre ister.Birincisi bir deÄŸiÅŸken,ikincisi bu deÄŸikene baÄŸlÄ± olarak dÃ¶ngÃ¼nÃ¼n ne kadar devam edeceÄŸi Ã¼Ã§Ã¼ncÃ¼sÃ¼ ise birinci deÄŸiÅŸkeni gÃ¼ncelleme komutu.
*/

// DOM ( DOCUMENT OBJECT MODAL)

// document'in Html kÄ±sÄ±mÄ±ndaki 'body' ye karÅŸÄ±lÄ±k geldiÄŸini sÃ¶ylemiÅŸtik. Js iÃ§erisinde yer alan DOM ile bizlere  bu kÄ±sÄ±mda yer alan Html elemanlarÄ±na eriÅŸme ve bu elemanlara mÃ¼dahale etme imkanÄ± sunar.

//  Html de bulunan elemanlara gerek class gerek id gerekse tag ismi ile eriÅŸmiÅŸtik.Bu eriÅŸim sonucunda bu elemanlara harici css dosyalarÄ±nda Ã¶zellikler aktarmÄ±ÅŸtÄ±k.AynÄ± ÅŸekilde Html de yer alan elemanlara javascript dosyalarÄ±mÄ±zda eriÅŸebiliriz.

// Javascript dosyasÄ±nda Html deki elemanlara eriÅŸmek iÃ§in:

// 1-) Class AdÄ± ile:
let javascript = document.getElementsByClassName("javascript");
console.log(javascript);
// 2-) Ä°d ile:
let software = document.getElementById("yazÄ±lÄ±m");
console.log(software);

// 3-) Tag adÄ± ile:

// 4-) querySellector ile eriÅŸme:
